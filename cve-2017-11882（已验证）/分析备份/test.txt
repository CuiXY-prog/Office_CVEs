# 通过复合文档操作寻找切入点
	- API Monitor 操作
	StgCreateDocfile ( "C:\Users\cxy\AppData\Local\Microsoft\Windows\INetCache\Content.Word\~WRF{1237FEE9-6275-4161-8895-41707E173FEA}.tmp", STGM_CREATE | STGM_DELETEONRELEASE | STGM_READWRITE | STGM_SHARE_EXCLUSIVE, 0, 0x6b5429f8 = 0x17b60950 )
		IStorage::CreateStorage ( "_1740415696", STGM_READWRITE | STGM_SHARE_EXCLUSIVE, 0, 0, 0x1304047c = 0x17b60810 )

	- dll api
	ole32!StgCreateDocfileStub
		coml2!CExposedDocFile::CreateStorage

# WINWORD 执行调用
	- wwlib 调用
	call    dword ptr [wwlib!Osf::OSFCreateOfficeExtensionsDialogUser+0x347c5 (6b17d6d4)] ds:002b:6b17d6d4={ole32!OleRun (746394a0)}
	00 0096d03c 6a663c26     0ea998f8 00000001 00000001 wwlib!wdGetApplicationObject+0xdae1e			# wwlib+CA729E  运行对象
	01 0096d0cc 6a31dcd6     00b83210 0ea998f8 00000028 wwlib!PTLS7::LsDestroyContext+0x249aa1			# wwlib+633814	有关文档流的读取、更新对象等操作
	02 009722e0 6a31ff62     00b83210 00975926 0000000a wwlib!PTLS7::FsUpdateFinitePage+0x73f5b			# wwlib+2EF641
	03 009751a8 6a31651c     00b83210 0097551c 00002000 wwlib!PTLS7::FsUpdateFinitePage+0x761e7			# wwlib+2E6DA0
	04 0097575c 6a6605ac     00b83210 0097579c 00000194 wwlib!PTLS7::FsUpdateFinitePage+0x6c7a1			# wwlib+2E62A3	解析 RTF 文档
	05 00975bac 6a65ffb5     0000000c 00b83210 00b83238 wwlib!PTLS7::LsDestroyContext+0x246427			# wwlib+6303E7
	06 00975e00 6a1ba593     0000000c 04032000 40280000 wwlib!PTLS7::LsDestroyContext+0x245e30
	07 009776ec 6a0768ef     0000000c 00000000 04032000 wwlib!PTLS7::FsUpdateBottomlessPage+0x17494
	08 00977c14 6a1d54ed     009784f0 00000001 00000000 wwlib!PTLS7::LsAssert+0x2bd1c
	09 0097901c 6a1d3d3b     0097911c 0097910c 04032000 wwlib!PTLS7::FsUpdateBottomlessPage+0x323ee
	0a 009790a0 6aaa721e     0097911c 0097910c 04032000 wwlib!PTLS7::FsUpdateBottomlessPage+0x30c3c
	0b 0097b3e4 6aaa6f04     00000000 0e7b99e8 00000000 wwlib!wdCommandDispatch+0xf1fdd
	0c 0097bd2c 6a5c4dc6     6b4cda08 00000000 00000000 wwlib!wdCommandDispatch+0xf1cc3
	0d 0097bf88 6a0d2f43     0097eddc 4ede9619 00000318 wwlib!PTLS7::LsDestroyContext+0x1aac41
	0e 0097edbc 6a1e8d23     0097eddc 00000001 00000001 wwlib!PTLS7::LsAssert+0x88370
	0f 0097ee90 6a1e8bb0     fffffffe 0097eed8 00000000 wwlib!PTLS7::FsUpdateBottomlessPage+0x45c24
	10 0097eea8 6832fd68     6b4fd8c8 0ea56458 0ea56460 wwlib!PTLS7::FsUpdateBottomlessPage+0x45ab1
	11 0097eed0 6832fcfe     00000001 4edbfcc2 68aee804 mso99Lwin32client+0xafd68
	12 0097ef08 68409c69     0ea9cb28 0100004e 68aee804 mso99Lwin32client+0xafcfe
	13 0097ef60 682c9870     0ea9cb28 0000004e 68aee804 mso99Lwin32client+0x189c69
	14 0097ef84 682b40bb     0ea9cb28 00000000 68aee804 mso99Lwin32client+0x49870
	15 0097efac 682b3e1b     0ea9cb28 0000004e 68aee804 mso99Lwin32client+0x340bb
	16 0097efd0 6887ad2b     0ea9cb28 0000004e 68aee804 mso99Lwin32client+0x33e1b
	17 0097f004 6887d9f4     11819ea0 118a9518 0b352930 mso40uiwin32client+0x5ad2b
	18 0097f018 68878243     0ea9cb28 118a9518 0000004e mso40uiwin32client+0x5d9f4
	19 0097f054 68878199     118a9518 0000004e 11819ea0 mso40uiwin32client+0x58243
	1a 0097f078 68868d57     11920d00 68aee804 00000000 mso40uiwin32client+0x58199
	1b 0097f098 6884b5d6     11920d00 68b4bf84 68aee804 mso40uiwin32client+0x48d57
	1c 0097f0dc 6885be7b     00b4bf84 00000002 68aee804 mso40uiwin32client+0x2b5d6
	1d 0097f104 688bbea1     68b4bf84 00000002 68aee804 mso40uiwin32client+0x3be7b
	1e 0097f13c 6896c725     0b352168 68b4bf84 0097f1c0 mso40uiwin32client+0x9bea1
	1f 0097f15c 688c7b6e     0e91a638 0097f1c0 00000000 mso40uiwin32client+0x14c725
	20 0097f18c 6895efb7     11969e70 68b01670 0097f1c0 mso40uiwin32client+0xa7b6e
	21 0097f1f0 689c2ff8     0097f41c 0097f41c 0097f3f0 mso40uiwin32client+0x13efb7
	22 0097f204 68865921     0097f41c 00040000 00000000 mso40uiwin32client+0x1a2ff8
	23 0097f28c 6884160c     0eaa2e28 11969e70 0097f3f0 mso40uiwin32client+0x45921
	24 0097f2dc 6886de57     0eaa2e28 0097f3f0 00000000 mso40uiwin32client+0x2160c
	25 0097f3b8 6886dd55     0eaa2e28 0097f3f0 00000000 mso40uiwin32client+0x4de57
	26 0097f3d8 688657cc     0097f3f0 00000001 11969e70 mso40uiwin32client+0x4dd55
	27 0097f404 6891063d     0097f41c 00000001 00000001 mso40uiwin32client+0x457cc
	28 0097f448 68910736     11969e70 0097f474 11969e70 mso40uiwin32client+0xf063d
	29 0097f490 689c309c     0097f4bc 00000000 118e70e8 mso40uiwin32client+0xf0736
	2a 0097f4a4 688e4c4c     0097f4bc 00040000 00000000 mso40uiwin32client+0x1a309c
	2b 0097f52c 6884160c     0eaa2e28 11969e70 118e70e8 mso40uiwin32client+0xc4c4c
	2c 0097f57c 6886de57     0eaa2e28 118e70e8 00000000 mso40uiwin32client+0x2160c
	2d 0097f660 688c95a2     0eaa2e28 118e70e8 00000000 mso40uiwin32client+0x4de57
	2e 0097f674 6889ba6f     118e70c4 00000000 00000000 mso40uiwin32client+0xa95a2
	2f 0097f6a4 688e2243     0eaa2e28 0e858130 00cb00ea mso40uiwin32client+0x7ba6f
	30 0097f6c8 6886db18     010613a8 0e7d5818 6886d77e mso40uiwin32client+0xc2243
	31 0097f774 6886d7ea     00000202 00000000 00cb00ea mso40uiwin32client+0x4db18
	32 0097f7c0 74fbd273     00000000 00000202 00000000 mso40uiwin32client+0x4d7ea
	33 0097f7ec 74f9e84a     6886d77e 010613a8 00000202 USER32!_InternalCallWinProc+0x2b
	34 0097f8d4 74f9e1a4     6886d77e 00000000 00000202 USER32!UserCallWinProcCheckWow+0x30a
	35 0097f948 74f9df60     006e3800 0097f964 6a0ad35f USER32!DispatchMessageWorker+0x234
	36 0097f954 6a0ad35f     6b4cca30 00000000 0097f97c USER32!DispatchMessageW+0x10
	37 0097f964 6a0ad309     6b4cca30 00000000 010613a8 wwlib!PTLS7::LsAssert+0x6278c
	38 0097f97c 6a0ace19     00000001 7454a200 6a030000 wwlib!PTLS7::LsAssert+0x62736
	39 0097f9bc 6a0ab8c7     6a03e8d4 0097f9ec 00fe1762 wwlib!PTLS7::LsAssert+0x62246
	3a 0097f9c8 00fe1762     00fe0000 00000000 00c9386b wwlib!PTLS7::LsAssert+0x60cf4
	3b 0097f9ec 00fe1194     00fe0000 00000000 00c9386b winword+0x1762
	3c 0097fa38 745462c4     006e2000 745462a0 aeba1f36 winword+0x1194
	3d 0097fa4c 779b0609     006e2000 ad4256e0 00000000 KERNEL32!BaseThreadInitThunk+0x24
	3e 0097fa94 779b05d4     ffffffff 779d2511 00000000 ntdll!__RtlUserThreadStart+0x2f
	3f 0097faa4 00000000     00fe1000 006e2000 00000000 ntdll!_RtlUserThreadStart+0x1b

	- ole 调用
	wwlib+CA73CA	call ole32!OleRun	# wwlib+CA729E
		???		call AppVIsvSubsystems32!VirtualizeCurrentProcess+0x192dc0(第二个call)
			ole32+47EEF 	call AppVIsvSubsystems32!VirtualizeCurrentProcess+0xbed70
				???		call    AppVIsvSubsystems32!VirtualizeCurrentProcess+0xbdd90(第三个call)
					???		call	ole32!CDefObject::Run
				
# EQNEDT32 分析
EqnEdt32+1160F(调用2次)			# 第二次发生栈溢出
	EqnEdt32+411658


# 漏洞函数调用分析
00 0019ebd0 004115d8     0019ed54 00000000 0019ebf0 EqnEdt32!EqnFrameWinProc+0x2b2f
01 0019ec14 004218e4     0019ed54 0019efe4 0019f224 EqnEdt32!EqnFrameWinProc+0x2af8
02 0019ed04 004214e2     0019ed54 0000005a 00000001 EqnEdt32!FMDFontListEnum+0x650
03 0019ed30 0043b466     0019ed54 0000005a 0019efe4 EqnEdt32!FMDFontListEnum+0x24e
04 0019ee58 0043a8a0     0019efe4 0019f224 754b1f4e EqnEdt32!MFEnumFunc+0xcc69
05 0019ee70 0043a72f     00190008 0019efe4 0019f224 EqnEdt32!MFEnumFunc+0xc0a3
06 0019ee88 0043a7a5     00190008 0019eeb0 0019efe4 EqnEdt32!MFEnumFunc+0xbf32
07 0019eeb8 00437cea     00190008 008b8934 00190000 EqnEdt32!MFEnumFunc+0xbfa8
08 0019eee8 0043784d     008b8934 00000000 0019efe4 EqnEdt32!MFEnumFunc+0x94ed
09 0019ef4c 0042f926     0019ef64 0019efe4 0019f224 EqnEdt32!MFEnumFunc+0x9050
0a 0019ef7c 00406a98     02ab0074 0019efe4 0019f224 EqnEdt32!MFEnumFunc+0x1129


# 读取调用
43B44B		dword_45BD3C


